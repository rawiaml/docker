1. donnez les commandes docker permettant de:
    a. démarrer un conteneur apache (nommé "a1") en arrière-plan avec redirection de port 8000 vers 80
	docker run --name a1 -d -p 8000:80 httpd

    b. démarrer un conteneur apache (nommé "a2") en arrière-plan avec redirection de port 8001 vers 80
	docker run --name a2 -d -p 8001:80 httpd
    c. obtenir les logs du conteneur a2
	docker logs a2
    d. suivre en temps réel les logs du conteneur a1
	docker logs a1 en split terminal
    e. arrêter a1 et a2
	docker stop a1 a2
    f. supprimer a1 et a2
	docker rm a1 a2
    g. supprimer l'image ayant servi de base aux conteneurs a1 et a2
	docker rmi httpd
    h. (re)télécharger l'image ayant servi de base aux conteneurs a1 et a2
	docker pull httpd
***************************************************************************************************************************************
Créer un script shell (exo1_start.sh) produisant 2 conteneurs redis dans deux versions différentes 
ainsi que 2 conteneurs mysql dans deux versions différentes (attention, variable d'environnement obligatoire MYSQL_ROOT_PASSWORD, -e)
Créer le script arrêtant et supprimant ces conteneurs (exo1_destroy.sh)
****************************************************************************************************************************************
(exo1_start.sh)
****************************************************************************************************************************************
docker run -d --name redis1 redis:7.0.7
docker run -d --name redis2 redis:alpine

docker run -e MYSQL_ROOT_PASSWORD=admin -d --name mysql mysql:5.7
docker run -e MYSQL_ROOT_PASSWORD=admin -d --name mysql2 7484689f290f
*****************************************************************************************************************************************
(exo1_destroy.sh)
*****************************************************************************************************************************************
docker stop mysql mysql2 
docker stop redis1 redis2
docker rm mysql mysql2
docker rm redis1 redis2

ou 

docker rm -f mysql mysql2
docker rm -f redis1 redis2
==> chmod 777 exo1_start.sh :changer le droit de permission pour executer les scripts
